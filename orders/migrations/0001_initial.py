# Generated by Django 3.0.2 on 2020-10-01 04:34

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0021_profile_region'),
        ('references', '0013_auto_20201001_0834'),
    ]

    operations = [
        migrations.CreateModel(
            name='Order',
            fields=[
                ('order_id', models.CharField(help_text='Номер генерируется по нажатию кнопки генерировать...', max_length=32, primary_key=True, serialize=False, verbose_name='No.заявки')),
                ('ext_order_id', models.CharField(blank=True, help_text='Номер оригинальной заявки', max_length=32, null=True, verbose_name='No. оригинальной заявки')),
                ('description', models.TextField(blank=True, max_length=512, null=True, verbose_name='Описание')),
                ('create_date', models.DateField(auto_now_add=True, verbose_name='Дата создания')),
                ('close_date', models.DateField(null=True, verbose_name='Дата закрытия')),
                ('dead_line', models.DateField(blank=True, help_text='Дата исполнения (до)', null=True, verbose_name='Дата исполнения')),
                ('is_public', models.BooleanField(default=False, verbose_name='Опубликована')),
                ('master_id', models.CharField(blank=True, max_length=32, null=True, verbose_name='No.Мастер-Заявки')),
                ('region', models.CharField(choices=[('Ульяновск', 'Ульяновск (город и область)'), ('Димитровград', 'Димитровград'), ('Саранск', 'Саранск (Мордовия)'), ('Казань', 'Казань (Республика Татарстан)'), ('Самара', 'Самара (Самарская область)'), ('Иное', 'Иное')], default='Ульяновск', max_length=200, verbose_name='Регион')),
                ('img', models.ImageField(blank=True, help_text='Добавьте изображение заявки, если имеется...', max_length=200, null=True, upload_to='orders/images/', verbose_name='Изображение')),
                ('client', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='references.Client', verbose_name='Заявитель')),
            ],
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('task_id', models.CharField(max_length=32, primary_key=True, serialize=False, verbose_name='No.внут.заявки')),
                ('task_type', models.CharField(choices=[('R1', 'Работы по схеме Р1'), ('R2', 'Работы по схеме Р2'), ('PK-PRTO', 'Производственный контроль (ПРТО)'), ('PK', 'Производственный контроль (лаборатория)'), ('SOUT', 'СОУТ'), ('DOCS', 'Вручение пакета документов/Оплата'), ('OTHER', 'Иное')], max_length=64, verbose_name='Тип задачи')),
                ('qty', models.IntegerField(default=1, verbose_name='Количество')),
                ('description', models.TextField(blank=True, max_length=512, null=True, verbose_name='Описание')),
                ('create_date', models.DateField(auto_now_add=True, verbose_name='Дата создания')),
                ('close_date', models.DateField(blank=True, null=True, verbose_name='Дата закрытия')),
                ('dead_line', models.DateField(null=True, verbose_name='Дата исполнения')),
                ('accept_date', models.DateField(blank=True, null=True, verbose_name='Дата принятия')),
                ('attach', models.FileField(blank=True, help_text='Прикрепите архив с исходными данными, если имеются...', max_length=200, null=True, upload_to='orders/task_files/')),
                ('distribution_dep', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='accounts.Department', verbose_name='Распределитель')),
                ('ref_order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='orders.Order', verbose_name='Заявка')),
            ],
        ),
        migrations.CreateModel(
            name='ExecutionPlan',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ext_executor', models.CharField(blank=True, choices=[('RPN', 'Роспотребнадзор'), ('FMBA', 'ФМБА'), ('OWNER', 'Владелец ПРТО'), ('СLIENT', 'Заказчик'), ('OTHER', 'Иное')], max_length=64, null=True, verbose_name='Внешний исполнитель')),
                ('target', models.CharField(choices=[('OOS', 'Расчет СЗЗ и ЗОЗ'), ('SEE', 'Санитарно-эпидемиологическая экспертиза (Р1)'), ('SEZ', 'Санитарно-эпидемиологическое заключение (Р1-РПН)'), ('PROTOCOL', 'Протокол измерений ЭМП (Р2)'), ('EZ-R2', 'Экспертное заключние по измерениям (Р2)'), ('LETTER', 'Письмо-согласование (Р2-РПН)'), ('DOCS', 'Вручение пакета документов/Оплата'), ('OTHER', 'Иное')], max_length=64, null=True, verbose_name='Целевой документ')),
                ('extra', models.CharField(blank=True, max_length=256, null=True, verbose_name='Дополнительно')),
                ('start_date', models.DateField(blank=True, null=True, verbose_name='Начало')),
                ('stop_date', models.DateField(blank=True, null=True, verbose_name='Окончание')),
                ('position', models.IntegerField(verbose_name='Позиция в списке')),
                ('description', models.TextField(blank=True, max_length=512, null=True, verbose_name='Описание')),
                ('is_distributed', models.BooleanField(default=False, verbose_name='Если распределено')),
                ('plan_type', models.IntegerField(default=0, verbose_name='Тип стадии')),
                ('int_executor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='accounts.Department', verbose_name='Внутр. исполнитель')),
                ('ref_task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='orders.Task', verbose_name='Задача')),
            ],
        ),
        migrations.CreateModel(
            name='Card',
            fields=[
                ('execution_id', models.AutoField(primary_key=True, serialize=False)),
                ('start_date', models.DateField(blank=True, null=True, verbose_name='Старт дата')),
                ('stop_date', models.DateField(blank=True, null=True, verbose_name='Стоп дата')),
                ('object_id', models.IntegerField(blank=True, null=True, verbose_name='Идентификатор объекта')),
                ('object_full_name', models.TextField(blank=True, max_length=1024, null=True, verbose_name='Название')),
                ('doc_no', models.CharField(blank=True, max_length=64, null=True, verbose_name='Номер документа')),
                ('doc_date', models.DateField(blank=True, null=True, verbose_name='Дата')),
                ('doc_type', models.CharField(choices=[('OOS', 'Расчет СЗЗ и ЗОЗ'), ('SEE', 'Санитарно-эпидемиологическая экспертиза (Р1)'), ('SEZ', 'Санитарно-эпидемиологическое заключение (Р1-РПН)'), ('PROTOCOL', 'Протокол измерений ЭМП (Р2)'), ('EZ-R2', 'Экспертное заключние по измерениям (Р2)'), ('LETTER', 'Письмо-согласование (Р2-РПН)'), ('DOCS', 'Вручение пакета документов/Оплата'), ('OTHER', 'Иное')], default='none', max_length=256, verbose_name='Целевой тип')),
                ('doc_title', models.TextField(blank=True, max_length=1024, null=True, verbose_name='Название')),
                ('doc_base', models.CharField(blank=True, max_length=1024, null=True, verbose_name='База')),
                ('doc_qty', models.IntegerField(default=1, verbose_name='Количество документов')),
                ('source_file', models.FileField(blank=True, help_text='Прикрепите исходный документ, если имеется...', max_length=200, null=True, upload_to='orders/execution_files/sources/')),
                ('archive_file', models.FileField(blank=True, help_text='Прикрепите архивный документ, если имеется...', max_length=200, null=True, upload_to='orders/execution_files/archive/')),
                ('ref_action', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='orders.ExecutionPlan', verbose_name='Работа')),
            ],
        ),
    ]
